#certificates 15
JAVA=""
ICA=""

# Replace Pidgin Certificate Store
if [ -e /bin/pidgin ]; then
	rm -rf /lib/purple/ca-certs
	ln -s /etc/ssl/certs /lib/purple/ca-certs
fi

# Replace Adobe Reader Certs
if [ -e /bin/acroread ]; then
	rm /opt/Adobe/Reader9/Reader/Cert/curl-ca-bundle.crt
	ln -s /etc/ssl/certs/ca-bundle.crt /opt/Adobe/Reader9/Reader/Cert/curl-ca-bundle.crt
fi

# Replace Default Java Certificate Store
if [ -e /bin/keytool ]; then
	JAVA=`readlink /bin/keytool | sed -e "s/\/bin\/.*//"`
	rm $JAVA/lib/security/cacerts
	ln -s /etc/pki/java/cacerts $JAVA/lib/security/cacerts
fi

# Replace Default Citrix Certificate Store
if [ -e /bin/wfica ]; then
	ICA=`readlink /bin/wfica | sed -e "s/\/wfica//"`
	rm -rf $ICA/keystore/cacerts
	ln -s /etc/ssl/certs $ICA/keystore/cacerts
fi

if [ -e /certs ]; then
	if [ ! -d /certs/ca ]; then
		mkdir -p /certs/ca
		mv -f /certs/*.crt /certs/ca 2>/dev/null
		mv -f /certs/*.pem /certs/ca 2>/dev/null
		rmdir --ignore-fail-on-non-empty /certs/ca
	fi
fi

install_pem() {
	if [ ! -L $1 ]; then
		j=`basename $1 | sed -e 's/\.crt//' |sed -e 's/\.pem//'`
		cp $1 /etc/ssl/certs/$j.pem
		#ln -s $j.pem /etc/ssl/certs/$j.crt

		hash=`openssl x509 -hash -noout -in "/etc/ssl/certs/$j.pem"`
		suff=0
		while [ -e "/etc/ssl/certs/$hash.$suff" ]; do
			let suff+=1
		done
		ln -s $j.pem /etc/ssl/certs/$hash.$suff
	fi
}

new_db()
{
	if [ ! -e /etc/pki/nssdb/cert9.db ]; then
		mkdir -p /etc/pki/nssdb
		certutil -d sql:/etc/pki/nssdb -X --empty-password -N
	fi
}

if [ -e /certs/ca ]; then
	for cert in `ls -1 /certs/ca/*.crt 2>/dev/null` `ls -1 /certs/ca/*.pem 2>/dev/null`; do
		DN=`openssl x509 -subject -noout -in $cert 2>/dev/null`
		if [ -n "`echo $DN | grep 'OU='`" ]; then
			ALIAS=`echo $DN | sed -e "s/subject=.*OU = //" -e "s/OU = .*CN = //" -e "s/CN = //" -e "s/\/emailAddress.*//" -e "s/Certificate Authority/CA/g" -e "s/Certification Authority/CA/g"`
		else
			ALIAS=`echo $DN | sed -e "s/subject=.*CN = //" -e "s/\/emailAddress.*//" -e "s/Certificate Authority/CA/g" -e "s/Certification Authority/CA/g"`
		fi
		if [ -n "$JAVA" ]; then
			JALIAS=`echo $ALIAS | tr A-Z a-z | sed -e "s/\W//g"`
			LD_LIBRARY_PATH=$JAVA/lib/i386/jli keytool -importcert -alias "extra-$JALIAS" -keystore /etc/pki/java/cacerts -noprompt -storepass 'changeit' -file $cert > /dev/null 2>&1
		fi
		if [ -e /bin/certutil ]; then
			new_db
			/bin/certutil -A -n "$ALIAS" -t "CT,C," -d sql:/etc/pki/nssdb -i $cert --empty-password
			/bin/certutil -A -n "$ALIAS" -t "CT,C," -d dbm:/etc/pki/nssdb -i $cert
		fi
		openssl x509 -text -in $cert >> /etc/ssl/cert.pem 2>/dev/null
		install_pem $cert
	done
fi

if [ -e /certs/trusted ]; then
	for cert in `ls -1 /certs/trusted/*.crt 2>/dev/null` `ls -l /certs/trusted/*.pem 2>/dev/null`; do
		DN=`openssl x509 -subject -noout -in $cert 2>/dev/null`
		if [ -n "`echo $DN | grep 'OU='`" ]; then
			ALIAS=`echo $DN | sed -e "s/subject=.*OU=//" -e "s/OU=.*CN=//" -e "s/CN=//" -e "s/\/emailAddress.*//" -e "s/Certificate Authority/CA/g" -e "s/Certification Authority/CA/g"`
		else
			ALIAS=`echo $DN | sed -e "s/subject=.*CN=//" -e "s/\/emailAddress.*//" -e "s/Certificate Authority/CA/g" -e "s/Certification Authority/CA/g"`
		fi
		if [ -n "$JAVA" ]; then
			JALIAS=`echo $ALIAS | tr A-Z a-z | sed -e "s/\W//g"`
			OPTFILE=`echo $cert | sed -e "s/.crt$/.opt/"`
			if [ -e $OPTFILE ]; then
				loc=""
				tsflag=""
				$OPTFILE
				if [ -n "$tsflag" ]; then
					JALIAS="$JALIAS\$tsflag"
				fi
				if [ -n "$loc" ]; then
					JALIAS="$JALIAS\$loc=$loc##docbase:$loc##from:$loc"
				fi
			fi
			LD_LIBRARY_PATH=$JAVA/lib/i386/jli keytool -importcert -alias $JALIAS -keystore $JAVA/lib/security/trusted.certs -noprompt -storepass 'trustit' -file $cert > /dev/null 2>&1
		fi
		if [ -e /bin/certutil ]; then
			new_db
			/bin/certutil -A -n "$ALIAS" -t "P,," -d sql:/etc/pki/nssdb -i $cert --empty-password
			/bin/certutil -A -n "$ALIAS" -t "P,," -d dbm:/etc/pki/nssdb -i $cert
		fi
		openssl x509 -text -in $cert >> /etc/ssl/cert.pem 2>/dev/null
		install_pem $cert
	done
fi

rm -rf /certs
