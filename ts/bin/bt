#!/bin/bash
set -x
set -e

#ISO=build/boot-images/refind-iso/thinstation-refind.iso
#ISO=build/boot-images/systemd-boot-iso/thinstation-efi.iso
ISO=build/boot-images/iso/thinstation.iso
#IMAGE=refind
IMAGE=syslinux
#IMAGE=systemd-boot
HD=thinstation.img
procs=`nproc`
let procs=procs/2

confirm_iso()
{
	if [ ! -e $ISO ]; then
		echo "ISO not found: $ISO"
		exit 1
	fi
}

confirm_hd()
{
	if [ ! -e $HD ]; then
		qemu-img create -f qcow2 thinstation.img 30G
	fi
}

bridge()
{
	if [ -n "`ifconfig |grep -e br0`" ]; then
		echo "-net bridge,br=br0 -net nic,macaddr=52:54:00:12F:34f:56"
	fi
}

wrap_efi()
{
#	cp $ISO $HD
	export AGREE=true; mkgptdrv -o /build/boot-images/$IMAGE -p ESP:1G:boot -l thinstation.img:2G
}

VGA="-vga qxl -global qxl-vga.vram_size=132710400"
#VGA="-vga virtio"
#VGA="-vga std"
#VGA="-vga cirrus"
#VGA="-vga vmware"
SOUND="-soundhw ac97"
CPU="-smp cores=$procs,threads=1,sockets=1"
MEMORY="-m 4096"
#RNG="-object rng-random,id=RNG"
MOUSE="-usbdevice tablet"
KVM="-enable-kvm"
EFI="-L . --bios /usr/share/edk2.git/ovmf-x64/OVMF-pure-efi.fd"
NETWORK=`bridge`
#QEMU=qemu-system-i386
QEMU=qemu-system-x86_64

STANDARD_MACHINE="$SOUND $RNG $VGA $CPU $MEMORY $MOUSE $KVM $NETWORK"

case $1 in
	cd)	confirm_iso && confirm_hd && $QEMU $STANDARD_MACHINE -cdrom $ISO -hda $HD --boot d ;;
	efi)	wrap_efi && $QEMU $STANDARD_MACHINE $EFI -hda $HD;;
	bios)	$QEMU $STANDARD_MACHINE -hda build/bios.boot;;
	image)  confirm_iso && confirm_hd && $QEMU $STANDARD_MACHINE -cdrom $ISO -hda $HD;;
	*)	confirm_iso && $QEMU $STANDARD_MACHINE -cdrom $ISO $EFI --boot menu=on;;
esac

